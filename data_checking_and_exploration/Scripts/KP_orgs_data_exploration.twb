<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (Table2)' inline='true' name='federated.1l3bqfd01ei0px1b2yw4d1arouno' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table2' name='excel-direct.13lmpg61ihwb0a1dyuylj0jpjwde'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/STAR/Documents/KP_led_orgs_project/Data/Table2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.13lmpg61ihwb0a1dyuylj0jpjwde' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D33:no:A1:D33:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='COP.Budget' ordinal='1' />
            <column datatype='real' name='X..Subrecipients' ordinal='2' />
            <column datatype='real' name='Subrecipient..' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.13lmpg61ihwb0a1dyuylj0jpjwde' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D33:no:A1:D33:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='COP.Budget' ordinal='1' />
            <column datatype='real' name='X..Subrecipients' ordinal='2' />
            <column datatype='real' name='Subrecipient..' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D33:no:A1:D33:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COP.Budget</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COP.Budget]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>COP.Budget</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X..Subrecipients</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X..Subrecipients]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>X..Subrecipients</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subrecipient..</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Subrecipient..]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Subrecipient..</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='COP Budget' datatype='integer' name='[COP.Budget]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Subrecipient $' datatype='real' name='[Subrecipient..]' role='measure' type='quantitative' />
      <column caption='% Subrecipients' datatype='real' default-format='p0.00%' name='[X..Subrecipients]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X..Subrecipients]' derivation='Attribute' name='[attr:X..Subrecipients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[COP.Budget]' derivation='Sum' name='[sum:COP.Budget:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Subrecipient..]' derivation='Sum' name='[sum:Subrecipient..:qk]' pivot='key' type='quantitative' />
      <column-instance column='[X..Subrecipients]' derivation='Sum' name='[sum:X..Subrecipients:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l3bqfd01ei0px1b2yw4d1arouno].[sum:COP.Budget:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1l3bqfd01ei0px1b2yw4d1arouno].[__tableau_internal_object_id__].[cnt:Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l3bqfd01ei0px1b2yw4d1arouno].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l3bqfd01ei0px1b2yw4d1arouno].[attr:X..Subrecipients:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1l3bqfd01ei0px1b2yw4d1arouno].[sum:X..Subrecipients:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1l3bqfd01ei0px1b2yw4d1arouno].[sum:Subrecipient..:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9C738A3C3E0E4843B6ADA00DF24B119D'>
            <properties context=''>
              <relation connection='excel-direct.13lmpg61ihwb0a1dyuylj0jpjwde' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D33:no:A1:D33:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='COP.Budget' ordinal='1' />
                  <column datatype='real' name='X..Subrecipients' ordinal='2' />
                  <column datatype='real' name='Subrecipient..' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table1)' inline='true' name='federated.0elgk4s10dcogf18nuge8117y52w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table1' name='excel-direct.0gs6a840kys7t719sh9ub00fapbe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/STAR/Documents/KP_led_orgs_project/Data/Table1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0gs6a840kys7t719sh9ub00fapbe' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D215:no:A1:D215:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Subrecipient' ordinal='1' />
            <column datatype='real' name='Amount..USD.' ordinal='2' />
            <column datatype='string' name='KP.Led' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0gs6a840kys7t719sh9ub00fapbe' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D215:no:A1:D215:0' header='yes' outcome='6'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Subrecipient' ordinal='1' />
            <column datatype='real' name='Amount..USD.' ordinal='2' />
            <column datatype='string' name='KP.Led' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D215:no:A1:D215:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_49FBE406C52B4D2DA99CA9BC956E4999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subrecipient</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subrecipient]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Subrecipient</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_49FBE406C52B4D2DA99CA9BC956E4999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amount..USD.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Amount..USD.]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Amount..USD.</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_49FBE406C52B4D2DA99CA9BC956E4999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>KP.Led</remote-name>
            <remote-type>130</remote-type>
            <local-name>[KP.Led]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>KP.Led</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_49FBE406C52B4D2DA99CA9BC956E4999]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[KP.Led]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_49FBE406C52B4D2DA99CA9BC956E4999]' role='measure' type='quantitative' />
      <column-instance column='[KP.Led]' derivation='None' name='[none:KP.Led:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:KP.Led:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_49FBE406C52B4D2DA99CA9BC956E4999'>
            <properties context=''>
              <relation connection='excel-direct.0gs6a840kys7t719sh9ub00fapbe' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D215:no:A1:D215:0' header='yes' outcome='6'>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Subrecipient' ordinal='1' />
                  <column datatype='real' name='Amount..USD.' ordinal='2' />
                  <column datatype='string' name='KP.Led' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Budget Breakdown by Country&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table2)' name='federated.1l3bqfd01ei0px1b2yw4d1arouno' />
          </datasources>
          <datasource-dependencies datasource='federated.1l3bqfd01ei0px1b2yw4d1arouno'>
            <column caption='COP Budget' datatype='integer' name='[COP.Budget]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Subrecipient $' datatype='real' name='[Subrecipient..]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[COP.Budget]' derivation='Sum' name='[sum:COP.Budget:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Subrecipient..]' derivation='Sum' name='[sum:Subrecipient..:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l3bqfd01ei0px1b2yw4d1arouno].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l3bqfd01ei0px1b2yw4d1arouno].[sum:COP.Budget:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l3bqfd01ei0px1b2yw4d1arouno].[sum:Subrecipient..:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1l3bqfd01ei0px1b2yw4d1arouno].[none:Country:nk]' value='25' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l3bqfd01ei0px1b2yw4d1arouno].[Multiple Values]' num-steps='5' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l3bqfd01ei0px1b2yw4d1arouno].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-orientation' value='-90' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[Multiple Values]</rows>
        <cols>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{9AA8DAEF-0042-4D8E-B1B9-705BDA4B6FC4}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Subrecipient by Country&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table2)' name='federated.1l3bqfd01ei0px1b2yw4d1arouno' />
          </datasources>
          <datasource-dependencies datasource='federated.1l3bqfd01ei0px1b2yw4d1arouno'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='% Subrecipients' datatype='real' default-format='p0.00%' name='[X..Subrecipients]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[X..Subrecipients]' derivation='Sum' name='[sum:X..Subrecipients:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[sum:X..Subrecipients:qk]</rows>
        <cols>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{4E93783A-BA44-47BD-A9DE-A5A0B32B0B4B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>KP Led Budget by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table1)' name='federated.0elgk4s10dcogf18nuge8117y52w' />
          </datasources>
          <datasource-dependencies datasource='federated.0elgk4s10dcogf18nuge8117y52w'>
            <column datatype='real' name='[Amount..USD.]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[KP.Led]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[KP.Led]' derivation='None' name='[none:KP.Led:nk]' pivot='key' type='nominal' />
            <column-instance column='[Amount..USD.]' derivation='Sum' name='[sum:Amount..USD.:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0elgk4s10dcogf18nuge8117y52w].[none:KP.Led:nk]'>
            <groupfilter function='member' level='[none:KP.Led:nk]' member='&quot;Yes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0elgk4s10dcogf18nuge8117y52w].[none:KP.Led:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0elgk4s10dcogf18nuge8117y52w].[none:KP.Led:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0elgk4s10dcogf18nuge8117y52w].[sum:Amount..USD.:qk]</rows>
        <cols>[federated.0elgk4s10dcogf18nuge8117y52w].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{89A12B91-DFFB-4395-910E-EA3EA9F5F111}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l3bqfd01ei0px1b2yw4d1arouno].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[:Measure Names]</field>
            <field>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92D4D39E-C1FE-4924-A4BE-BBA83FF8E8BA}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[:Measure Names]</field>
            <field>[federated.1l3bqfd01ei0px1b2yw4d1arouno].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4525C381-641E-43D4-830C-138AC51D7244}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0elgk4s10dcogf18nuge8117y52w].[none:KP.Led:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0elgk4s10dcogf18nuge8117y52w].[none:Country:nk]</field>
            <field>[federated.0elgk4s10dcogf18nuge8117y52w].[none:KP.Led:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{005C3430-68A4-4C61-B946-CDB7EB9000C9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AUx+ORVzyGbnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
